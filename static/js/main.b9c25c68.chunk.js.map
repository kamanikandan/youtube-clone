{"version":3,"sources":["api/API.js","config.js","components/Search.js","components/Header.js","components/SearchHeader.js","components/Card.js","components/Videos.js","components/Player.js","components/Loader.js","components/Footer.js","App.js","index.js"],"names":["getVideos","searchText","a","axios","get","params","key","q","part","maxResults","type","videoEmbeddable","response","data","items","status","message","regEx","RegExp","filteredData","localData","filter","video","snippet","title","match","channelTitle","Search","getsearchText","useState","text","setText","className","onSubmit","e","preventDefault","placeholder","onChange","target","value","Header","onClick","SearchHeader","length","Card","playingVideo","openVideo","src","thumbnails","high","url","alt","Date","publishedAt","toDateString","rel","stopPropagation","href","channelId","aria-label","role","Videos","videos","map","index","etag","Player","videoId","id","browserSize","window","innerWidth","document","body","clientWidth","innerHeight","clientHeight","width","height","frameBorder","allow","allowFullScreen","Loader","Footer","getFullYear","App","setVideos","setSearchText","setPlayingVideo","isLoading","setIsLoading","useEffect","searchKey","console","log","fetchData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9c25c68.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { API_KEY } from \"../config\";\r\nimport localData from \"./data.json\";\r\n\r\nexport const getVideos = async (searchText) => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://www.googleapis.com/youtube/v3/search\",\r\n      {\r\n        params: {\r\n          key: API_KEY,\r\n          q: searchText,\r\n          part: \"snippet\",\r\n          maxResults: 50,\r\n          type: \"video\",\r\n          videoEmbeddable: true,\r\n        },\r\n      }\r\n    );\r\n    return response.data.items;\r\n  } catch (err) {\r\n    if (err?.response?.status > 400 || err.message === \"Network Error\") {\r\n      let regEx = new RegExp(`${searchText}`, \"gi\");\r\n      const filteredData = localData.items.filter(\r\n        (video) =>\r\n          video.snippet.title.match(regEx) ||\r\n          video.snippet.channelTitle.match(regEx)\r\n      );\r\n      return filteredData;\r\n    }\r\n  }\r\n};\r\n","export const API_KEY = \"AIzaSyCPf9lrlbh37Z6_oU_BLZUd7PAA4U9aETI\";\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ getsearchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getsearchText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          placeholder=\"Search YouTube Videos here...\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nconst Header = ({ getsearchText }) => {\r\n  return (\r\n    <header className=\"row app-header\">\r\n      <div className=\"container\">\r\n        <div className=\"container-wrapper\">\r\n          <h1 onClick={() => getsearchText(\"\")}>\r\n            <span>YouTube</span>Clone\r\n          </h1>\r\n          <Search getsearchText={getsearchText} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst SearchHeader = ({ searchText }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"searchKey\">\r\n        Search results for: {searchText.length > 0 ? `\"${searchText}\"` : '\"\"'}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ video, playingVideo }) => {\r\n  const openVideo = (video) => {\r\n    playingVideo(video);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={() => openVideo(video)}\r\n      title={video.snippet.title}\r\n    >\r\n      <div className=\"card-image\">\r\n        <img\r\n          src={video.snippet.thumbnails.high.url}\r\n          alt={video.snippet.title}\r\n          className=\"card-img\"\r\n        />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <h4>{video.snippet.title}</h4>\r\n        <h6>{new Date(video.snippet.publishedAt).toDateString()}</h6>\r\n        <a\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          title={video.snippet.channelTitle}\r\n          onClick={(e) => e.stopPropagation()}\r\n          href={`https://www.youtube.com/channel/${video.snippet.channelId}`}\r\n        >\r\n          {video.snippet.channelTitle}\r\n          <span aria-label=\"External Link\" role=\"img\">\r\n            ðŸ”—\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Videos = ({ videos, playingVideo }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"videos-wrapper\">\r\n        {videos.length === 0 ? (\r\n          <h2>No Videos found!</h2>\r\n        ) : (\r\n          videos?.map((video, index) => (\r\n            <Card\r\n              playingVideo={playingVideo}\r\n              video={video}\r\n              key={video.etag + index}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","import React from \"react\";\r\n\r\nconst Player = ({ video, playingVideo }) => {\r\n  const videoId = video?.id?.videoId;\r\n  const browserSize = {\r\n    width: window.innerWidth || document.body.clientWidth,\r\n    height: window.innerHeight || document.body.clientHeight,\r\n  };\r\n  if (!videoId) return null;\r\n  return (\r\n    <>\r\n      <div className=\"overlay\" onClick={() => playingVideo({})}></div>\r\n      <div className=\"video-container\">\r\n        <div className=\"video-box\">\r\n          <span\r\n            className=\"close\"\r\n            title=\"Close\"\r\n            onClick={() => playingVideo({})}\r\n          >\r\n            X\r\n          </span>\r\n          <iframe\r\n            title={video.snippet.title}\r\n            width={browserSize.width * 0.65}\r\n            height={browserSize.height * 0.75}\r\n            src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-overlay\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h5 className=\"footer\">\r\n        &copy; {new Date().getFullYear()} Devloped with YouYube Data V3 API\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport { getVideos } from \"./api/API\";\nimport Header from \"./components/Header\";\nimport SearchHeader from \"./components/SearchHeader\";\nimport Videos from \"./components/Videos\";\nimport Player from \"./components/Player\";\nimport Loader from \"./components/Loader\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [searchText, setSearchText] = useState(\"mosh\");\n  const [playingVideo, setPlayingVideo] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async (searchKey) => {\n      try {\n        const data = await getVideos(searchKey);\n        data?.length === 0 ? setVideos([]) : setVideos(data);\n        setIsLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData(searchText);\n  }, [searchText]);\n\n  if (isLoading) return <Loader />;\n  return (\n    <>\n      <Player\n        playingVideo={(video) => setPlayingVideo(video)}\n        video={playingVideo}\n      />\n      <Header getsearchText={(text) => setSearchText(text)} />\n      <SearchHeader searchText={searchText} />\n      <Videos\n        playingVideo={(video) => setPlayingVideo(video)}\n        videos={videos}\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}