{"version":3,"sources":["api/API.js","config.js","components/Search.js","components/Header.js","components/SearchHeader.js","components/Card.js","components/Videos.js","components/Player.js","components/Loader.js","components/Footer.js","App.js","index.js"],"names":["getVideos","searchText","a","axios","get","params","key","q","part","maxResults","type","videoEmbeddable","response","data","items","status","Search","getsearchText","useState","text","setText","className","onSubmit","e","preventDefault","placeholder","onChange","target","value","Header","onClick","SearchHeader","length","Card","video","playingVideo","openVideo","title","snippet","src","thumbnails","high","url","alt","Date","publishedAt","toDateString","rel","channelTitle","stopPropagation","href","channelId","aria-label","role","Videos","videos","map","index","etag","Player","videoId","id","browserSize","window","innerWidth","document","body","clientWidth","innerHeight","clientHeight","width","height","frameBorder","allow","allowFullScreen","Loader","Footer","getFullYear","App","setVideos","setSearchText","setPlayingVideo","isLoading","setIsLoading","useEffect","searchKey","console","log","fetchData","ReactDOM","render","StrictMode","getElementById"],"mappings":"yQAwBeA,EArBA,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAESC,IAAMC,IAC3B,+CACA,CACEC,OAAQ,CACNC,ICTa,0CDUbC,EAAGN,EACHO,KAAM,UACNC,WAAY,GACZC,KAAM,QACNC,iBAAiB,KAXT,cAERC,EAFQ,yBAePA,EAASC,KAAKC,OAfP,yDAiBP,KAAIF,SAASG,QAjBN,yDAAH,sDEuBAC,EAxBA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAOpC,OACE,yBAAKC,UAAU,oBACb,0BAAMC,SAPO,SAACC,GAChBA,EAAEC,iBACFP,EAAcE,KAMV,2BACEM,YAAY,gCACZC,SAAU,SAACH,GAAD,OAAOH,EAAQG,EAAEI,OAAOC,QAClCP,UAAU,eACVX,KAAK,SAEP,4BAAQW,UAAU,MAAMX,KAAK,UAA7B,aCAOmB,EAfA,SAAC,GAAuB,IAArBZ,EAAoB,EAApBA,cAChB,OACE,4BAAQI,UAAU,kBAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,wBAAIS,QAAS,kBAAMb,EAAc,WAAjC,UACS,wCAET,kBAAC,EAAD,CAAQA,cAAeA,QCClBc,EAVM,SAAC,GAAoB,IAAlB9B,EAAiB,EAAjBA,WACtB,OACE,yBAAKoB,UAAU,aACb,wBAAIA,UAAU,aAAd,uBACuBpB,EAAW+B,OAAS,EAApB,WAA4B/B,EAA5B,KAA4C,QCkC1DgC,EAtCF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAKrB,OACE,yBACEd,UAAU,OACVS,QAAS,kBAPK,SAACI,GACjBC,EAAaD,GAMIE,CAAUF,IACzBG,MAAOH,EAAMI,QAAQD,OAErB,yBAAKhB,UAAU,cACb,yBACEkB,IAAKL,EAAMI,QAAQE,WAAWC,KAAKC,IACnCC,IAAKT,EAAMI,QAAQD,MACnBhB,UAAU,cAGd,yBAAKA,UAAU,gBACb,4BAAKa,EAAMI,QAAQD,OACnB,4BAAK,IAAIO,KAAKV,EAAMI,QAAQO,aAAaC,gBACzC,uBACEC,IAAI,sBACJpB,OAAO,SACPU,MAAOH,EAAMI,QAAQU,aACrBlB,QAAS,SAACP,GAAD,OAAOA,EAAE0B,mBAClBC,KAAI,0CAAqChB,EAAMI,QAAQa,YAEtDjB,EAAMI,QAAQU,aAAc,IAC7B,0BAAMI,aAAW,gBAAgBC,KAAK,OAAtC,oBCVKC,EAlBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQpB,EAAmB,EAAnBA,aACxB,OACE,yBAAKd,UAAU,aACb,yBAAKA,UAAU,kBACO,KAAb,OAANkC,QAAM,IAANA,OAAA,EAAAA,EAAQvB,QACP,gDACEuB,EAAS,IACX,6DADE,OAGFA,QAHE,IAGFA,OAHE,EAGFA,EAAQC,KAAI,SAACtB,EAAOuB,GAAR,OACV,kBAAC,EAAD,CAAMtB,aAAcA,EAAcD,MAAOA,EAAO5B,IAAK4B,EAAMwB,aCuBxDC,EAlCA,SAAC,GAA6B,IAAD,EAA1BzB,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACjByB,EAAO,OAAG1B,QAAH,IAAGA,GAAH,UAAGA,EAAO2B,UAAV,aAAG,EAAWD,QACrBE,EACGC,OAAOC,YAAcC,SAASC,KAAKC,YADtCL,EAEIC,OAAOK,aAAeH,SAASC,KAAKG,aAE9C,OAAKT,EAEH,oCACE,yBAAKvC,UAAU,UAAUS,QAAS,kBAAMK,EAAa,OACrD,yBAAKd,UAAU,mBACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,QACVgB,MAAM,QACNP,QAAS,kBAAMK,EAAa,MAH9B,KAOA,4BACEE,MAAOH,EAAMI,QAAQD,MACrBiC,MAA2B,IAApBR,EACPS,OAA6B,IAArBT,EACRvB,IAAG,wCAAmCqB,EAAnC,eACHY,YAAY,IACZC,MAAM,0EACNC,iBAAe,OApBJ,MCERC,EARA,WACb,OACE,yBAAKtD,UAAU,kBACb,yBAAKA,UAAU,aCONuD,EAVA,WACb,OACE,yBAAKvD,UAAU,aACb,wBAAIA,UAAU,UAAd,SACU,IAAIuB,MAAOiC,cADrB,+B,MC2CSC,MArCf,WAAgB,IAAD,EACe5D,mBAAS,IADxB,mBACNqC,EADM,KACEwB,EADF,OAEuB7D,mBAAS,cAFhC,mBAENjB,EAFM,KAEM+E,EAFN,OAG2B9D,mBAAS,IAHpC,mBAGNiB,EAHM,KAGQ8C,EAHR,OAIqB/D,oBAAS,GAJ9B,mBAINgE,EAJM,KAIKC,EAJL,KAmBb,OAbAC,qBAAU,YACO,uCAAG,WAAOC,GAAP,eAAAnF,EAAA,+EAEKF,EAAUqF,GAFf,OAERxE,EAFQ,OAGdsE,GAAa,GACI,KAAb,OAAJtE,QAAI,IAAJA,OAAA,EAAAA,EAAMmB,QAAe+C,EAAU,IAAMA,EAAUlE,GAJjC,gDAMdyE,QAAQC,IAAR,MANc,yDAAH,sDASfC,CAAUvF,KACT,CAACA,IAEAiF,EAAkB,kBAAC,EAAD,MAEpB,oCACE,kBAAC,EAAD,CACE/C,aAAc,SAACD,GAAD,OAAW+C,EAAgB/C,IACzCA,MAAOC,IAET,kBAAC,EAAD,CAAQlB,cAAe,SAACE,GAAD,OAAU6D,EAAc7D,MAC/C,kBAAC,EAAD,CAAclB,WAAYA,IAC1B,kBAAC,EAAD,CACEkC,aAAc,SAACD,GAAD,OAAW+C,EAAgB/C,IACzCqB,OAAQA,IAEV,kBAAC,EAAD,QCvCNkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAAS2B,eAAe,W","file":"static/js/main.2d230deb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { API_KEY } from \"../config\";\r\n\r\nconst getVideos = async (searchText) => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://www.googleapis.com/youtube/v3/search\",\r\n      {\r\n        params: {\r\n          key: API_KEY,\r\n          q: searchText,\r\n          part: \"snippet\",\r\n          maxResults: 50,\r\n          type: \"video\",\r\n          videoEmbeddable: true,\r\n        },\r\n      }\r\n    );\r\n    return response.data.items;\r\n  } catch (err) {\r\n    return err.response.status;\r\n  }\r\n};\r\n\r\nexport default getVideos;\r\n","export const API_KEY = \"AIzaSyCPf9lrlbh37Z6_oU_BLZUd7PAA4U9aETI\";\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ getsearchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getsearchText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          placeholder=\"Search YouTube Videos here...\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nconst Header = ({ getsearchText }) => {\r\n  return (\r\n    <header className=\"row app-header\">\r\n      <div className=\"container\">\r\n        <div className=\"container-wrapper\">\r\n          <h1 onClick={() => getsearchText(\"india\")}>\r\n            YouTube<span>Clone</span>\r\n          </h1>\r\n          <Search getsearchText={getsearchText} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst SearchHeader = ({ searchText }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"searchKey\">\r\n        Search results for: {searchText.length > 0 ? `\"${searchText}\"` : '\"\"'}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ video, playingVideo }) => {\r\n  const openVideo = (video) => {\r\n    playingVideo(video);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={() => openVideo(video)}\r\n      title={video.snippet.title}\r\n    >\r\n      <div className=\"card-image\">\r\n        <img\r\n          src={video.snippet.thumbnails.high.url}\r\n          alt={video.snippet.title}\r\n          className=\"card-img\"\r\n        />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <h4>{video.snippet.title}</h4>\r\n        <h6>{new Date(video.snippet.publishedAt).toDateString()}</h6>\r\n        <a\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          title={video.snippet.channelTitle}\r\n          onClick={(e) => e.stopPropagation()}\r\n          href={`https://www.youtube.com/channel/${video.snippet.channelId}`}\r\n        >\r\n          {video.snippet.channelTitle}{\" \"}\r\n          <span aria-label=\"External Link\" role=\"img\">\r\n            ðŸ”—\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Videos = ({ videos, playingVideo }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"videos-wrapper\">\r\n        {videos?.length === 0 ? (\r\n          <h2>No Videos found!</h2>\r\n        ) : videos > 400 ? (\r\n          <h2>Can't retrive videos for now!</h2>\r\n        ) : (\r\n          videos?.map((video, index) => (\r\n            <Card playingVideo={playingVideo} video={video} key={video.etag} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","import React from \"react\";\r\n\r\nconst Player = ({ video, playingVideo }) => {\r\n  const videoId = video?.id?.videoId;\r\n  const browserSize = {\r\n    width: window.innerWidth || document.body.clientWidth,\r\n    height: window.innerHeight || document.body.clientHeight,\r\n  };\r\n  if (!videoId) return null;\r\n  return (\r\n    <>\r\n      <div className=\"overlay\" onClick={() => playingVideo({})}></div>\r\n      <div className=\"video-container\">\r\n        <div className=\"video-box\">\r\n          <span\r\n            className=\"close\"\r\n            title=\"Close\"\r\n            onClick={() => playingVideo({})}\r\n          >\r\n            X\r\n          </span>\r\n          <iframe\r\n            title={video.snippet.title}\r\n            width={browserSize.width * 0.65}\r\n            height={browserSize.height * 0.75}\r\n            src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-overlay\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h5 className=\"footer\">\r\n        &copy; {new Date().getFullYear()} Devloped with Google API\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport getVideos from \"./api/API\";\nimport Header from \"./components/Header\";\nimport SearchHeader from \"./components/SearchHeader\";\nimport Videos from \"./components/Videos\";\nimport Player from \"./components/Player\";\nimport Loader from \"./components/Loader\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [searchText, setSearchText] = useState(\"javascript\");\n  const [playingVideo, setPlayingVideo] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async (searchKey) => {\n      try {\n        const data = await getVideos(searchKey);\n        setIsLoading(false);\n        data?.length === 0 ? setVideos([]) : setVideos(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData(searchText);\n  }, [searchText]);\n\n  if (isLoading) return <Loader />;\n  return (\n    <>\n      <Player\n        playingVideo={(video) => setPlayingVideo(video)}\n        video={playingVideo}\n      />\n      <Header getsearchText={(text) => setSearchText(text)} />\n      <SearchHeader searchText={searchText} />\n      <Videos\n        playingVideo={(video) => setPlayingVideo(video)}\n        videos={videos}\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}